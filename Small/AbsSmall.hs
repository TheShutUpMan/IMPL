

module AbsSmall where

-- Haskell module generated by the BNF converter




newtype Ident = Ident String deriving (Eq, Ord, Show, Read)
data P = Top [Ident] [Ident] E
  deriving (Eq, Ord, Show, Read)

data E
    = Implies E E
    | Rel E R E
    | Plus E E
    | Nmb Integer
    | Var Ident
    | Fls
  deriving (Eq, Ord, Show, Read)

data R = Eql | Lth
  deriving (Eq, Ord, Show, Read)

