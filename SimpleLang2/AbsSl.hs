

module AbsSl where

-- Haskell module generated by the BNF converter




newtype BIdent = BIdent String deriving (Eq, Ord, Show, Read)
newtype IIdent = IIdent String deriving (Eq, Ord, Show, Read)
data Prog = Pgm [Stm]
  deriving (Eq, Ord, Show, Read)

data Stm
    = Assb BIdent BVal | Assi IIdent IVal | Putb BVal | Puti IVal
  deriving (Eq, Ord, Show, Read)

data BVal = BValBIdent BIdent | BVal_TRUE | BVal_FALSE
  deriving (Eq, Ord, Show, Read)

data IVal = IValIIdent IIdent | IValInteger Integer
  deriving (Eq, Ord, Show, Read)

