

module AbsSl where

-- Haskell module generated by the BNF converter




newtype Ident = Ident String deriving (Eq, Ord, Show, Read)
newtype IntVar = IntVar String deriving (Eq, Ord, Show, Read)
data P = Prog I I S
  deriving (Eq, Ord, Show, Read)

data S
  deriving (Eq, Ord, Show, Read)

data U = U_puti | U_putb
  deriving (Eq, Ord, Show, Read)

data Vi = ViIdent Ident | ViInteger Integer
  deriving (Eq, Ord, Show, Read)

data Vb = VbIdent Ident | Vb_TRUE | Vb_FALSE
  deriving (Eq, Ord, Show, Read)

data I = I1 Ident I | IIdent Ident
  deriving (Eq, Ord, Show, Read)

